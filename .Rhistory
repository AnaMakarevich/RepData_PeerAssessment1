activity$date = as.Date(activity$date, "%Y-%m-%d")
str(activity)
?hist
?group_by
library(reshape2)
?barplot
?hist
tst = group_by(activity, date)
library(dplyr)
tst = group_by(activity, date)
str(tst)
activity = read.csv("activity.csv")
str(activity)
hist(activity$steps)
tst = dcast(activity, date ~ variable, fun.aggregate = sum)
tst = group_by(activity, date)
cleanedData <- melt(activity, id = date)
cleanedData <- melt(activity, id = c("date")
)
meanedData <- dcast(cleanedData, date ~ variable, fun.aggregate = sum)
hist(meanedData)
str(meanedData)
table(meanedData$steps)
table(meanedData$date)
table(activity$date, activity$steps)
?aggregate
date.to.steps = activity[c("date", "steps")]
str(date.to.steps)
aggregate(date.to.steps, sum)
library(datasets)
data(state)
str(state)
data(state.x77)
state
?datasets
library(help="datasets")
library(state)
data(state)
data
str(data)
state
data(state)
str(state.x77)
?aggregate
aggregate(activity, by = activity$date, sum)
aggregate(activity, by = list(activity$date), sum)
state.region
aggregate(activity, list(Date = activity$date), sum)
str(activity)
activity$date = as.Date(activity$date, "%Y-%m-%d")
aggregate(activity, list(Date = activity$date), sum)
aggregate(date ~ steps, data = activity, sum)
aggregate(steps ~ date, data = activity, sum)
activity = read.csv("activity.csv")
str(activity)
aggregate(steps ~ date, data = activity, sum)
head(activity)
head(activity, n = 20)
head(activity, n = 200)
hist(activity)
date.to.steps
date.to.steps = aggregate(steps ~ date, data = activity, sum)
date.to.steps
summary(activity$date)
activity$date
length(summary(activity$date))
date.to.steps
summarize(group_by(activity, date), sum(steps))
?summarize
?summarize
library(dplyr)
summarize(group_by(activity, date), sum(steps))
summarize(group_by(activity, date), sum(steps, na.rm = TRUE))
?complete.cases
ok <- complete.cases(activity)
d = activity[ok]
d = activity[ok,]
summarize(group_by(d, date), sum(steps, na.rm = TRUE))
summarize(group_by(activity, date), sum(steps), na.rm=TRUE)
summarize(group_by(activity, date), sum(steps))
summarize(group_by(activity, date), steps.total = sum(steps))
date.to.steps
hist(date.to.steps$steps)
hist(date.to.steps$steps, breaks = 2)
hist(date.to.steps$steps, breaks = 20)
library(ggplot2)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidth = 2)
date.to.steps = aggregate(steps ~ date, data = activity, sum)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidth = 2)
summary(date.to.steps)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram()
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidth=x)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidht=20)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidth=20)
ggplot(date.to.steps, aes(x=steps)) + geom_histogram(binwidth=x)
?geom_histogram
g = ggplot(date.to.steps, aes(x=steps))
g + geom_histogram(binwidth=1)
hist(date.to.steps$steps)
?hist
hist(date.to.steps$steps, breaks = 4)
hist(date.to.steps$steps, breaks = 10)
hist(date.to.steps$steps, breaks = 20)
hist(date.to.steps$steps,
breaks = 20,
main = "Total number ob steps per day"
)
hist(date.to.steps$steps,
breaks = 20,
main = "Total number ob steps per day",
xlab = "Steps per day"
)
hist(date.to.steps$steps,
breaks = 20,
main = "Total number ob steps per day",
xlab = "Steps per day",
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "thistle3"
)
mean(date.to.steps$steps)
median(date.to.steps$steps)
head(activitym n = 10)
head(activity, n = 10)
head(activity, n = 300)
time.to.step = aggregate(steps ~ interval, data = activity, mean)
time.to.step
barplot(height=time.to.step$steps, width = 20,
xlab = "Time Interval", ylab = "Average number of steps"),
names.arg = time.to.step$interval,
main = "Average number of steps per time interval",
col = "thistle3")
barplot(height=time.to.step$steps, width = 20,
xlab = "Time Interval", ylab = "Average number of steps",
names.arg = time.to.step$interval,
main = "Average number of steps per time interval",
col = "thistle3")
plot(time.to.step)
plot(time.to.step, type='l')
?plot
g = ggplot(time.to.step, aes(x=interval, y = steps))
g
g = ggplot(time.to.step, aes(x=interval, y = steps))
g + geom_smooth(size = 1, aes(group=1), stat="identity",color = "springgreen4") +
geom_point(size=2, color= "black")
g + geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle3")
g + geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle4")
g + theme_light(base_size=12)+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle4")
g + theme_light(base_size=16)+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle4")
g + theme_light(base_size=16)+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle4") +
labs(title = "Average number of steps for time interval") +
labs(x = "Time interval", y = "Average number of steps")
g + theme_light(base_size=16)+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "thistle4") +
labs(title = "Average number of steps per each time interval") +
labs(x = "Time interval", y = "Average number of steps")
head(time.to.step)
which.max(time.to.step$steps)
time.to.step[which.max(time.to.step$steps)]
time.to.step[which.max(time.to.step$steps),]
time.to.step[105]
time.to.step[103]
time.to.step[105,]
time.to.step[103,]
time.to.step$interval[which.max(time.to.step$steps),]
time.to.step$interval[which.max(time.to.step$steps)]
time.to.step$interval[which.max(time.to.step$steps)]
?complete.cases
nrow(activity) - sum(complete.cases(activity))
?impute
install.packages("mi")
library(mi)
?impute
??impute
libray(mice)
library(mice)
?mi
sum(is.na(activity$steps))
sum(is.na(activity$interval))
sum(is.na(activity$date))
mice(activity)
sum(is.na(activity$steps))
sum(is.na(activity$interval))
sum(is.na(activity$date))
activity = mice(activity)
sum(is.na(activity$steps))
sum(is.na(activity$interval))
sum(is.na(activity$date))
sum(is.na(activity$steps))
str(activity)
?mice
activity = read.csv("activity.csv")
activity$date = as.Date(activity$date, "%Y-%m-%d")
str(activity)
reg = lm(steps ~ interval, data=activity, subset=!is.na(steps))
str(reg)
summary(reg)
prediction <- predict (reg, activity)
selvect = is.na(activity$steps)
activity$steps[selvect] = prediction[selvect]
sum(is.na(activity$steps))
sum(is.na(activity$interval))
sum(is.na(activity$date))
sum(is.na(activity$steps))
date.to.steps = aggregate(steps ~ date, data = activity, sum)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "thistle3"
)
mean(date.to.steps$steps)
median(date.to.steps$steps)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "olive3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "olive"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "wheat3"
)
mean(date.to.steps$steps)
median(date.to.steps$steps)
?par
head(activity)
activity_old = read.csv("activity.csv")
date.to.steps_old = aggregate(steps ~ date, data = activity_old, sum)
par(mfrow=c(2,1))
hist(date.to.steps_old$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day",
xlab = "Steps per day",
col = "wheat3"
)
par(mfrow=c(1,1))
par(mfrow=c(2,1))
hist(date.to.steps_old$steps,
breaks = 30,
main = "Total number of steps per day (NAs ignored)",
xlab = "Steps per day",
xlim = 15,
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day (with data imputation)",
xlab = "Steps per day",
xlim=15,
col = "wheat3"
)
?hist
par(mfrow=c(2,1))
hist(date.to.steps_old$steps,
breaks = 30,
main = "Total number of steps per day (NAs ignored)",
xlab = "Steps per day",
xlim = c(0,15),
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day (with data imputation)",
xlab = "Steps per day",
xlim=c(0,15),
col = "wheat3"
)
par(mfrow=c(1,1))
hist(date.to.steps_old$steps,
breaks = 30,
main = "Total number of steps per day (NAs ignored)",
xlab = "Steps per day",
ylim = c(0,15),
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day (with data imputation)",
xlab = "Steps per day",
ylim=c(0,15),
col = "wheat3"
)
par(mfrow=c(2,1))
hist(date.to.steps_old$steps,
breaks = 30,
main = "Total number of steps per day (NAs ignored)",
xlab = "Steps per day",
ylim = c(0,15),
col = "thistle3"
)
hist(date.to.steps$steps,
breaks = 30,
main = "Total number of steps per day (with data imputation)",
xlab = "Steps per day",
ylim=c(0,15),
col = "wheat3"
)
par(mfrow=c(1,1))
tst = activity[1,]
tst
weekday(tst$date)
?date
weekdays(tst$date)
activity2 = activity[1:100,]
?mutate
activity2 = activity[1:100,]
weekdays
weekdays()
?weekdays
mutate(activity2, weekday = !(weekdays(date) in c("Saturday","Sunday")))
?in
class(weekdays(tst$date))
mutate(activity2, weekday = !(weekdays(date) %in% c("Saturday","Sunday")))
activity = mutate(activity2, weekday = !(weekdays(date) %in% c("Saturday","Sunday")))
activity2
activity2 = mutate(activity2, weekday = !(weekdays(date) %in% c("Saturday","Sunday")))
?as.factor
activity2$weekday = as.factor(activity2$weekday, levels = c(T,F), labels = c("weekday", "weekend"))
activity2$weekday = as.factor(activity2$weekday, labels = c("weekday", "weekend"))
weekday_or_weekend <- function(date) {
if (weekdays(date) %in% c("Saturday","Sunday")):
value = "weekend"
else:
value = "weekday"
}
weekday_or_weekend <- function(date) {
if (weekdays(date) %in% c("Saturday","Sunday")):
value = "weekend"
else:
value = "weekday"
value
}
weekday_or_weekend <- function(date) {
if (weekdays(date) %in% c("Saturday","Sunday")):
"weekend"
else:
"weekday"
}
weekday_or_weekend <- function(date) {
ifelse(weekdays(date) %in% c("Saturday","Sunday"), "weekend", "weekday")
}
activity = mutate(activity, weekday = weekday_or_weekend(date))
head(activity)
activity[100:2000,]
summary(activity)
str(activity)
activity[100:2000,]
activity = read.csv("activity.csv")
str(activity)
activity$date = as.Date(activity$date, "%Y-%m-%d")
date.to.steps = aggregate(steps ~ date, data = activity, sum)
time.to.step = aggregate(steps ~ interval, data = activity, mean)
missing = nrow(activity) - sum(complete.cases(activity))
missing
reg = lm(steps ~ interval, data=activity, subset=!is.na(steps))
prediction <- predict (reg, activity)
selvect = is.na(activity$steps)
activity$steps[selvect] = prediction[selvect]
sum(is.na(activity$steps))
date.to.steps = aggregate(steps ~ date, data = activity, sum)
activity_old = read.csv("activity.csv")
date.to.steps_old = aggregate(steps ~ date, data = activity_old, sum)
weekday_or_weekend <- function(date) {
ifelse(weekdays(date) %in% c("Saturday","Sunday"), "weekend", "weekday")
}
activity = mutate(activity, weekday = weekday_or_weekend(date))
activity[100:2000,]
activity$weekday = as.factor(activity$weekday)
str(activity)
?group_by
head(aggregate(steps ~ interval, data = activity, mean))
head(aggregate(steps ~ interval+weekday, data = activity, mean))
str(aggregate(steps ~ interval+weekday, data = activity, mean))
weekday_data = subset(activity, weekday="weekday")
weekend_data = subset(activity, weekday="weekend")
head(weekend_data)
activity$weekday = as.factor(activity$weekday, levels=c("weekday", "weekend"), labels=c("weekday", "weekend"))
?subset
weekend_data = subset(activity, weekday=="weekend")
weekday_data = subset(activity, weekday=="weekday")
weekday_data = subset(activity, weekday=="weekday")
weekend_data = subset(activity, weekday=="weekend")
nrow(activity)
nrow(weekend_data)_nrow(weekday_data)
nrow(weekend_data)+nrow(weekday_data)
time.to.step.weekday = aggregate(steps ~ interval, data = weekday_data, mean)
time.to.step.weekend = aggregate(steps ~ interval, data = weekend_data, mean)
288*2
agg_data = aggregate(steps ~ interval+weekday, data = activity, mean)
str(agg_data)
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3") +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
?geom_bar
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=0.9) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=2) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=30) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
?geom_bar
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=288/30) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
?geom_bar
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="bin", fill="thistle3", width=288/30) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
?geom_bar
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=20) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
?geom_bar
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=20) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=2000/30) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
max(activity$interval)
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_bar(stat="identity", fill="thistle3", width=2355/30) +
labs(title = "Average number of steps per each interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekend, nrow = 2, ncol=1) +
geom_point(size=2, color= "black")+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "springgreen4") +
labs(title = "Average number of steps per each time interval") +
labs(y = "Average number of steps"))
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekend, nrow = 2, ncol=1) +
geom_point(size=2, color= "black")+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "springgreen4") +
labs(title = "Average number of steps per each time interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_point(size=2, color= "black")+
geom_smooth(size = 1, aes(group=1), stat="identity",color = "springgreen4") +
labs(title = "Average number of steps per each time interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_smooth(size = 1, aes(group=1), stat="identity",color = "springgreen4") +
labs(title = "Average number of steps per each time interval") +
labs(y = "Average number of steps")
g = ggplot(agg_data, aes(x = interval, y = steps))
g + theme_light(base_size=12) +
facet_wrap( ~ weekday, nrow = 2, ncol=1) +
geom_smooth(size = 1, aes(group=1), stat="identity",color = "violetred4") +
labs(title = "Average number of steps per each time interval") +
labs(y = "Average number of steps")
?mutate
